%% Author: Eric.yutao
%% Created: 2013-12-7
%% Description: TODO: Add description to gate_app
-module(erlmysql_app).

-behaviour(application).
%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Behavioural exports
%% --------------------------------------------------------------------
-export([
	 start/2,
     start/0,
	 stop/1
        ]).

%% --------------------------------------------------------------------
%% Internal exports
%% --------------------------------------------------------------------
-export([]).

%% --------------------------------------------------------------------
%% Macros
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Records
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% API Functions
%% --------------------------------------------------------------------


%% ====================================================================!
%% External functions
%% ====================================================================!
%% --------------------------------------------------------------------
%% Func: start/2
%% Returns: {ok, Pid}        |
%%          {ok, Pid, State} |
%%          {error, Reason}
%% --------------------------------------------------------------------
start(Type, StartArgs) ->
    case app_util:get_argument("-line") of
        [] -> slogger:msg("Error in erlmysql_app app ~p~n", [?MODULE]);
        [_Center|Rest] ->
            debug:info("************** erlmysql_app app ~p~n", [""]),
            debug:log_file("../log/line.log"),
            debug:error("Test for log file~n"),
            ping_center:wait_all_nodes_connect(true),
            %% MySQL need be treated as application
            erlmysql_sup:start_link()
%%             erlmysql_sup:start_mysql()
    end.

start() ->
    applicationex:start(?MODULE).

%% --------------------------------------------------------------------
%% Func: stop/1
%% Returns: any
%% --------------------------------------------------------------------
stop(State) ->
    ok.

%% ====================================================================
%% Internal functions
%% ====================================================================

