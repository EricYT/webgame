%% Author: Eric.yu
%% Created: 2013-10-6
%% Description: TODO: The option file
-module(env).

%%
%% Include files
%%


%% Macro
-define(ENV_ETS, env_ets).
-define(ENV_FILE, "../options/option").


%%
%% Exported Functions
%%
-export([]).

-compile(export_all).
%%
%% API Functions
%%
-spec init() -> ok.
init() ->
	init_env_table(),
	load_data().


-spec get(Key::any(), Default::any()) -> Res::any().
get(Key, Default) ->
	case ets:lookup(?ENV_ETS, Key) of
		[]			-> Default;
		[{_, Value}]-> Value
	end.



%%
%% Local Functions
%%
init_env_table() ->
	ets:new(?ENV_ETS, [set, named_table]).


load_data() ->
	case file:consult(?ENV_FILE) of
		{ok, [Terms]} ->
%% 			debug:info("~p~n", [erlang:tuple_to_list(Terms)]),
			[ets:insert(?ENV_ETS, ObjValue) || ObjValue <- erlang:tuple_to_list(Terms)],
			ok;
		{error, Reason} ->
			error(Reason)
	end.

